#!/bin/bash
#2004-2009 Jason Chu <jason@archlinux.org>
#2009-2010 Andrea Scarpino <andrea@archlinux.org>
#This program is free software: you can redistribute it and/or modify
#it under the terms of the GNU General Public License as published by
#the Free Software Foundation, either version 3 of the License, or
#(at your option) any later version
#This program is distributed in the hope that it will be useful,
#but WITHOUT ANY WARRANTY; without even the implied warranty of
#MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE
#http://www.gnu.org/licenses
declare -a args
declare -a srcpac
[ -f /etc/abs.conf ] && . /etc/abs.conf
[ -f /etc/makepkg.conf ] && . /etc/makepkg.conf
[ -f ~/.makepkg.conf ] && . ~/.makepkg.conf
version(){
	pacman -V
	echo "                       srcpac 0.7"
	echo "                       Copyright 2004 Jason Chu <jason@archlinux.org>"
	echo "                                 2009 Andrea Scarpino <andrea@archlinux.org>"
	exit 0
}
get_pkgname(){
	local tmp=${1##*/}
	tmp=${tmp%-$CARCH*}
	tmp=${tmp%-any*}
	echo -n ${tmp%-*-*}
}
build_packages(){
	while [ $# != 0 ]; do
		candidates=$(find "$ABSROOT" -type d -name "$1")
		if [ -z "$candidates" ]; then
			echo "Error: Couldn't find $1 in $ABSROOT"
			exit 1
		fi
		for pkgdir in ${candidates}
			do if [ -f ${pkgdir}/PKGBUILD ];then
				builddir=/var/srcpac${pkgdir/${ABSROOT}//}
				[ -d ${builddir} ] && rm -r ${builddir}
				mkdir -p ${builddir}
				cd ${builddir}
				cp -r ${pkgdir}/* .
				[ -x "/etc/srcpac.d/$1" ] && sed -i -f "/etc/srcpac.d/$1" PKGBUILD
				makepkg --asroot -c -s -r -f
				ret=$?
				if [ $ret != 0 ];then
					echo "Error: Failed to build $1"
					exit $ret
				fi
				if [ $DOWNLOAD = 0 ];then
					pacargs="-U"
					[ $NODEPS = 0 ] || pacargs="$pacargs"d
					[ $FORCE = 0 ] || pacargs="$pacargs"f
					[ "$ROOT" ] && pacargs="${pacargs}r $ROOT"
					pacman $pacargs *$PKGEXT
					mv *$PKGEXT /var/cache/pacman/pkg
					cd ..
					rm -r ${builddir}
				fi
			fi
		done
		shift
	done
}
MAJOR=0
FORCE=0
ROOT=""
NODEPS=0
BUILD=0
REFRESH=""
SYSUPGRADE=0
DOWNLOAD=0
ARGLIST=$@
while [ $# != 0 ]
	do case "$1" in
	--version)version;;
	--remove)
		[ $MAJOR = 0 ] || exec pacman -SR
		MAJOR=1;;
	--sync)
		[ $MAJOR = 0 ] || exec pacman -SR
		MAJOR=2;;
	--force)FORCE=1;;
	--root)
		ROOT="$2"
		shift;;
	--nodeps)NODEPS=1;;
	--abs)BUILD=1;;
	--refresh)REFRESH="$REFRESH"y;;
	--sysupgrade)SYSUPGRADE=1;;
	--downloadonly)DOWNLOAD=1;;
	-*)
		[ $(echo -n $1 |grep r) ] && OPTIONAL=$2
		OPTIND=1
		while getopts ":VRSfayur:w" opt $1 $OPTIONAL
			do case $opt in
			V)version;;
			R)
				[ $MAJOR = 0 ] || exec pacman -SR
				MAJOR=1;;
			S)
				[ $MAJOR = 0 ] || exec pacman -SR
				MAJOR=2;;
			f)FORCE=1;;
			r)ROOT="$OPTARG";;
			d)NODEPS=1;;
			a)BUILD=1;;
			y)REFRESH="$REFRESH"y;;
			u)SYSUPGRADE=1;;
			w)DOWNLOAD=1;;
			esac
		done;;
	*)args[${#args[@]}]="$1";;
	esac
	shift
done
[ "$ABSROOT" -a ${UID} = 0 ] || echo "ABSROOT undefined or not root"
[ -d /etc/srcpac.d ] || mkdir /etc/srcpac.d
if [ $MAJOR = 2 ];then
	[ $REFRESH ] && abs>/dev/null&pid=$!
	if [ $BUILD = 1 ];then
		if [ $REFRESH ];then
			pacman "-S$REFRESH"
			wait $pid
		fi
		if [ $DOWNLOAD = 1 ]
		then build_packages ${args[@]}
		else
			output=$(pacman -Sp ${args[*]} --noconfirm)
			ret=$?
			if [ $ret != 0 ];then
				echo -n $output
				exit $ret
			fi
			for pkg in ${args[*]}
			do [ -x /etc/srcpac.d/"$pkg" ] || srcpac[${#srcpac[@]}]="$pkg"
			done
			for pkg in $output
				do if [ $(echo -n "$pkg" |grep -F '://') ];then
					pkg=$(get_pkgname "$pkg")
					[ -x /etc/srcpac.d/"$pkg" ] && srcpac[${#srcpac[@]}]="$pkg"
				fi
			done
			[ ${#srcpac[@]} = 0 ] && exit 0
			for pkg in ${srcpac[@]};do
				touch /etc/srcpac.d/"$pkg"
				chmod +x /etc/srcpac.d/"$pkg"
			done
			echo ${srcpac[*]}
			build_packages ${srcpac[@]}
		fi
		exit
	elif [ $SYSUPGRADE = 1 -a -d /etc/srcpac.d ];then
		cd /etc/srcpac.d
		pacman $ARGLIST --ignore $(echo *|sed s/\ /,/g)
		[ $REFRESH ] && wait $pid
		exit
	fi
fi
pacman $ARGLIST
if [ $MAJOR = 1 ]
then for pkg in $(find /etc/srcpac.d -type f |sed s,.*/,,)
do [ "$(pacman -Q $pkg 2>/dev/null)" ] || chmod -x /etc/srcpac.d/$pkg
done
fi
[ -z $pid ] && wait $pid